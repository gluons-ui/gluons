// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListHeader /> Rendering can be have a custom line width of (1) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={1}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black bb bw1 pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black bb bw1 pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black bb bw1 pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black bb bw1 pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can be have a custom line width of (2) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={2}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black bb bw2 pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black bb bw2 pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black bb bw2 pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black bb bw2 pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can be have a custom line width of (3) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={3}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black bb bw3 pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black bb bw3 pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black bb bw3 pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black bb bw3 pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can be have a custom line width of (4) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={4}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black bb bw4 pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black bb bw4 pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black bb bw4 pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black bb bw4 pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can be have a custom line width of (5) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={5}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black bb bw5 pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black bb bw5 pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black bb bw5 pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black bb bw5 pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can be indented for a contained list 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={true}
    lineColor="red"
    lineWidth={0}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--red bb  pb2"
>
        <span
                className="ph3"
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="ph3"
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--red bb  pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "ph3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--red bb  pb2"
>
          <span
                    className="ph3"
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="ph3"
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--red bb  pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "ph3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can render a different color line 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="red"
    lineWidth={0}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--red bb  pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--red bb  pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--red bb  pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--red bb  pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering can render a line divider 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={0}
    lined={true}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black bb  pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black bb  pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black bb  pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black bb  pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering renders Default 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={0}
    lined={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black  pb2"
>
        <span
                className=""
        />
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
/>,
        "className": "b--black  pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black  pb2"
>
          <span
                    className=""
          />
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
/>,
          "className": "b--black  pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<ListHeader /> Rendering renders children 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListHeader
    indented={false}
    lineColor="black"
    lineWidth={0}
    lined={false}
>
    <h3>
        The Top of a List
    </h3>
</ListHeader>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="b--black  pb2"
>
        <span
                className=""
        >
                <h3>
                        The Top of a List
                </h3>
        </span>
</div>,
      "className": "list-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className=""
>
          <h3>
                    The Top of a List
          </h3>
</span>,
        "className": "b--black  pb2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            The Top of a List
</h3>,
          "className": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The Top of a List",
          },
          "ref": null,
          "rendered": "The Top of a List",
          "type": "h3",
        },
        "type": "span",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="b--black  pb2"
>
          <span
                    className=""
          >
                    <h3>
                              The Top of a List
                    </h3>
          </span>
</div>,
        "className": "list-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className=""
>
            <h3>
                        The Top of a List
            </h3>
</span>,
          "className": "b--black  pb2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              The Top of a List
</h3>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The Top of a List",
            },
            "ref": null,
            "rendered": "The Top of a List",
            "type": "h3",
          },
          "type": "span",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
