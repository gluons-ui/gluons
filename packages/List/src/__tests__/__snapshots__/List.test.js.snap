// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List /> should render a custom line color 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    lineColor="red"
    lineWidth={0}
    lined={true}
    ordered={false}
    radius={0}
>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
</List>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="list ma0 pa0 tl"
>
        <ListItem
                borderColor="red"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
</ul>,
      "className": "list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ListItem
            borderColor="red"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
        ],
        "className": "list ma0 pa0 tl",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "list-item-0",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".0",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-1",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".1",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-2",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".2",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-3",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".3",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-4",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".4",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
      ],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="list ma0 pa0 tl"
>
          <ListItem
                    borderColor="red"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
</ul>,
        "className": "list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ListItem
              borderColor="red"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
          ],
          "className": "list ma0 pa0 tl",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "list-item-0",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".0",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-1",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".1",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-2",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".2",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-3",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".3",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-4",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".4",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
        ],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<List /> should render a custom line width 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    lineColor="red"
    lineWidth={2}
    lined={true}
    ordered={false}
    radius={0}
>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
</List>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="list ma0 pa0 tl"
>
        <ListItem
                borderColor="red"
                borderWidth={2}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={2}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={2}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={2}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="red"
                borderWidth={2}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
</ul>,
      "className": "list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ListItem
            borderColor="red"
            borderWidth={2}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={2}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={2}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={2}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="red"
            borderWidth={2}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
        ],
        "className": "list ma0 pa0 tl",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "list-item-0",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 2,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".0",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-1",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 2,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".1",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-2",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 2,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".2",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-3",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 2,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".3",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-4",
          "nodeType": "class",
          "props": Object {
            "borderColor": "red",
            "borderWidth": 2,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".4",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
      ],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="list ma0 pa0 tl"
>
          <ListItem
                    borderColor="red"
                    borderWidth={2}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={2}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={2}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={2}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="red"
                    borderWidth={2}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
</ul>,
        "className": "list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ListItem
              borderColor="red"
              borderWidth={2}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={2}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={2}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={2}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="red"
              borderWidth={2}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
          ],
          "className": "list ma0 pa0 tl",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "list-item-0",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 2,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".0",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-1",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 2,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".1",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-2",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 2,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".2",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-3",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 2,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".3",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-4",
            "nodeType": "class",
            "props": Object {
              "borderColor": "red",
              "borderWidth": 2,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".4",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
        ],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<List /> should render a default list 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    lineColor="gray"
    lineWidth={0}
    lined={false}
    ordered={false}
    radius={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="list ma0 pa0 tl"
>
        
</ul>,
      "className": "list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [],
        "className": "list ma0 pa0 tl",
      },
      "ref": null,
      "rendered": Array [],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="list ma0 pa0 tl"
>
          
</ul>,
        "className": "list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "list ma0 pa0 tl",
        },
        "ref": null,
        "rendered": Array [],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<List /> should render a group of ListItems when passed children 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    lineColor="gray"
    lineWidth={0}
    lined={false}
    ordered={false}
    radius={0}
>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
</List>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="list ma0 pa0 tl"
>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
</ul>,
      "className": "list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
        ],
        "className": "list ma0 pa0 tl",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "list-item-0",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".0",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-1",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".1",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-2",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".2",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-3",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".3",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-4",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".4",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
      ],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="list ma0 pa0 tl"
>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
</ul>,
        "className": "list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
          ],
          "className": "list ma0 pa0 tl",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "list-item-0",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".0",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-1",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".1",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-2",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".2",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-3",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".3",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-4",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".4",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
        ],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<List /> should render a lined <ListItem /> when prop is present 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    lineColor="gray"
    lineWidth={0}
    lined={true}
    ordered={false}
    radius={0}
>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
</List>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ul
        className="list ma0 pa0 tl"
>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={true}
        >
                <p>
                        A child
                </p>
        </ListItem>
</ul>,
      "className": "list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={true}
>
            <p>
                        A child
            </p>
</ListItem>,
        ],
        "className": "list ma0 pa0 tl",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "list-item-0",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".0",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-1",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".1",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-2",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".2",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-3",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".3",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-4",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".4",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
      ],
      "type": "ul",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="list ma0 pa0 tl"
>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={true}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
</ul>,
        "className": "list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={true}
>
              <p>
                            A child
              </p>
</ListItem>,
          ],
          "className": "list ma0 pa0 tl",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "list-item-0",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".0",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-1",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".1",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-2",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".2",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-3",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".3",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-4",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".4",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
        ],
        "type": "ul",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`<List /> should render an ordered list 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    lineColor="gray"
    lineWidth={0}
    lined={false}
    ordered={true}
    radius={0}
>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
    <p>
        A child
    </p>
</List>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ol
        className="list ma0 pa0 tl"
>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
        <ListItem
                borderColor="gray"
                borderWidth={0}
                hasBorder={false}
        >
                <p>
                        A child
                </p>
        </ListItem>
</ol>,
      "className": "list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
          <ListItem
            borderColor="gray"
            borderWidth={0}
            hasBorder={false}
>
            <p>
                        A child
            </p>
</ListItem>,
        ],
        "className": "list ma0 pa0 tl",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "list-item-0",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".0",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-1",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".1",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-2",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".2",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-3",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".3",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "list-item-4",
          "nodeType": "class",
          "props": Object {
            "borderColor": "gray",
            "borderWidth": 0,
            "children": <p>
              A child
</p>,
            "hasBorder": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": ".4",
            "nodeType": "host",
            "props": Object {
              "children": "A child",
            },
            "ref": null,
            "rendered": "A child",
            "type": "p",
          },
          "type": [Function],
        },
      ],
      "type": "ol",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ol
          className="list ma0 pa0 tl"
>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
          <ListItem
                    borderColor="gray"
                    borderWidth={0}
                    hasBorder={false}
          >
                    <p>
                              A child
                    </p>
          </ListItem>
</ol>,
        "className": "list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
            <ListItem
              borderColor="gray"
              borderWidth={0}
              hasBorder={false}
>
              <p>
                            A child
              </p>
</ListItem>,
          ],
          "className": "list ma0 pa0 tl",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "list-item-0",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".0",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-1",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".1",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-2",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".2",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-3",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".3",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "list-item-4",
            "nodeType": "class",
            "props": Object {
              "borderColor": "gray",
              "borderWidth": 0,
              "children": <p>
                A child
</p>,
              "hasBorder": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": ".4",
              "nodeType": "host",
              "props": Object {
                "children": "A child",
              },
              "ref": null,
              "rendered": "A child",
              "type": "p",
            },
            "type": [Function],
          },
        ],
        "type": "ol",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
